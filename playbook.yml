---
- name: Get load averages and set vars
  
  hosts: All
  gather_facts: false
  remote_user: root
  tasks:

    - name: Get load averages
      shell: cat /proc/loadavg
      register: cpu_load

    - name: Set one-minute load average var
      set_fact:
        one_min_la: "{{ cpu_load.stdout.split() | first | float }}"

- name: Set PostgreSQL installation target
  
  hosts: localhost
  gather_facts: false
  tasks:

    - name: Target - Alma
      set_fact:
        target_system: "alma"
      when: hostvars['debian'].one_min_la>hostvars['alma'].one_min_la
    
    - name: Target - Debian
      set_fact:
        target_system: "debian"
      when: (hostvars['debian'].one_min_la<=hostvars['alma'].one_min_la)or(hostvars['debian'].one_min_la==hostvars['alma'].one_min_la)
    
    - name: Copy script on target
      shell: scp scripts/installation.sh root@{{ hostvars[hostvars['localhost'].target_system]['ansible_host'] }}:/tmp/installation.sh

- name: Install PosgreSQL
  
  hosts: All
  gather_facts: true
  remote_user: root
  tasks:

    - name: Install PostgreSQL
      shell: /tmp/installation.sh {{ hostvars['alma']['ansible_host'] }} 
      when: ansible_facts['distribution'] == 'Debian' and hostvars["localhost"].target_system == "debian"

    - name: Install PostgreSQL
      shell: /tmp/installation.sh {{ hostvars['debian']['ansible_host'] }}
      when: ansible_facts['distribution'] == 'AlmaLinux' and hostvars["localhost"].target_system == "alma"

- name: Configure PostgreSQL
  
  hosts: All
  become: yes
  become_user: postgres
  tasks:

    - name: Create user student
      vars:
        ansible_python_interpreter: /usr/bin/python3
      community.postgresql.postgresql_user:
        name: student
      when: (ansible_facts['distribution'] == 'Debian' and hostvars["localhost"].target_system == "debian") or (ansible_facts['distribution'] == 'AlmaLinux' and hostvars["localhost"].target_system == "alma")

    - name: Check DB
      vars:
        ansible_python_interpreter: /usr/bin/python3
      community.postgresql.postgresql_query:
        db: postgres
        query: SELECT 1
      when: (ansible_facts['distribution'] == 'Debian' and hostvars["localhost"].target_system == "debian") or (ansible_facts['distribution'] == 'AlmaLinux' and hostvars["localhost"].target_system == "alma")
